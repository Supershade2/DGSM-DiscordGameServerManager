//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DiscordGameServerManager.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DiscordGameServerManager.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup Failed.
        /// </summary>
        internal static string BotStartupFailed {
            get {
                return ResourceManager.GetString("BotStartupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game specified creating gameprofile.json if it doesn&apos;t already exist.
        /// </summary>
        internal static string CreatingGameProfile {
            get {
                return ResourceManager.GetString("CreatingGameProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating permissions.json note that this will count as succeeding if file already exists:.
        /// </summary>
        internal static string CreatingPermissions {
            get {
                return ResourceManager.GetString("CreatingPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DiscordTrustManager: Method: checkPermission.
        /// </summary>
        internal static string DiscordTrustManagerFailure {
            get {
                return ResourceManager.GetString("DiscordTrustManagerFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DiscordTrustManager: Method: load.
        /// </summary>
        internal static string DiscordTrustManagerWriteFailure {
            get {
                return ResourceManager.GetString("DiscordTrustManagerWriteFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many module names specified for the given number of modules.
        /// </summary>
        internal static string ExcessModuleNames {
            get {
                return ResourceManager.GetString("ExcessModuleNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load DMs.json.
        /// </summary>
        internal static string FailedLoadDMs {
            get {
                return ResourceManager.GetString("FailedLoadDMs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too few module name specified for the given number of modules.
        /// </summary>
        internal static string InsufficientModuleNames {
            get {
                return ResourceManager.GetString("InsufficientModuleNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occured, is the bot a admin or granted the correct permissions?.
        /// </summary>
        internal static string Message_Deletion_Failed {
            get {
                return ResourceManager.GetString("Message_Deletion_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occured, has the message already been deleted?.
        /// </summary>
        internal static string MessageDeletionNotFound {
            get {
                return ResourceManager.GetString("MessageDeletionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method download(Process p, ProcessStartInfo psi): Error please supply a non null process variable.
        /// </summary>
        internal static string NullProcessVariable {
            get {
                return ResourceManager.GetString("NullProcessVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start RCON thread.
        /// </summary>
        internal static string RCONStartFailure {
            get {
                return ResourceManager.GetString("RCONStartFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Renci_SshNet {
            get {
                object obj = ResourceManager.GetObject("Renci_SshNet", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Renci_SshNet_deps {
            get {
                object obj = ResourceManager.GetObject("Renci_SshNet_deps", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Renci_SshNet1 {
            get {
                object obj = ResourceManager.GetObject("Renci_SshNet1", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;doc&gt;
        ///    &lt;assembly&gt;
        ///        &lt;name&gt;Renci.SshNet&lt;/name&gt;
        ///    &lt;/assembly&gt;
        ///    &lt;members&gt;
        ///        &lt;member name=&quot;M:Renci.SshNet.Abstractions.CryptoAbstraction.GenerateRandom(System.Int32)&quot;&gt;
        ///            &lt;summary&gt;
        ///            Generates a &lt;see cref=&quot;T:System.Byte&quot;/&gt; array of the specified length, and fills it with a
        ///            cryptographically strong random sequence of values.
        ///            &lt;/summary&gt;
        ///            &lt;param name=&quot;length&quot;&gt;The length of the array generate.&lt;/param&gt;
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Renci_SshNet2 {
            get {
                return ResourceManager.GetString("Renci_SshNet2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resources.
        /// </summary>
        internal static string ResourcesDir {
            get {
                return ResourceManager.GetString("ResourcesDir", resourceCulture);
            }
        }
    }
}
